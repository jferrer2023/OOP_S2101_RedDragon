
package oop_motorph;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import javax.swing.JOptionPane;

public class frm_EmpAttLeaveApproval extends javax.swing.JFrame {

   
    public frm_EmpAttLeaveApproval() {
        initComponents();
        displayAttendanceData();
        
        //JBF: Sets the windown to center and disable resizable
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("Employees Attendance");
        
        // Retrieve current employee details
        EmpDetails employee = EmpUserSession.getInstance().getCurrentUser();
        
        // Get role from CSVHandler
        String role = CSVHandler.loadCredentials().get(employee.getEmpID())[1];
        
        // Set role-based access
        setRoleBasedAccess(role);
        
    }
    
        public void setRoleBasedAccess(String role) {
        // Default: Disable all buttons
        btn_attApprove.setEnabled(false);
        btn_attReject.setEnabled(false);

        // Enable buttons based on role (case-insensitive)
        switch (role.toUpperCase()) {
            case "EMPLOYEE":
                // Employees cannot approve or reject attendance
                break;
            case "FINANCE":
                btn_attApprove.setEnabled(true);
                btn_attReject.setEnabled(true);
                break;
            case "HR":
                // HR can approve or reject attendance
                btn_attApprove.setEnabled(true);
                btn_attReject.setEnabled(true);
                break;
            case "DEPTHEAD":
                // Dept-Head can approve or reject attendance
                btn_attApprove.setEnabled(true);
                btn_attReject.setEnabled(true);
                break;
            case "FINANCE TL":
                btn_attApprove.setEnabled(true);
                btn_attReject.setEnabled(true);
                break;
            case "PAYROLL MANAGER":
                btn_attApprove.setEnabled(true);
                btn_attReject.setEnabled(true);
                break;
            case "ACCOUNTING":
                btn_attApprove.setEnabled(true);
                btn_attReject.setEnabled(true);
                break;
            case "ADMIN":
                // Admin can approve or reject attendance
                btn_attApprove.setEnabled(true);
                btn_attReject.setEnabled(true);
                break;
            default:
                JOptionPane.showMessageDialog(this, "Invalid role: " + role, "Error", JOptionPane.ERROR_MESSAGE);
                break;
        }
    }   
    
    
    

    private void displayAttendanceData() {
        // get current user login 
        EmpDetails employee = EmpUserSession.getInstance().getCurrentUser();

        if (employee == null) {
            JOptionPane.showMessageDialog(this, "No employee data found!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
         List<EmpAttLeave> attendanceList = CSVHandler.getAttendanceData();
    DefaultTableModel model = (DefaultTableModel) tbl_Attendance.getModel();

    //to disable tbl edit
    tbl_Attendance.setDefaultEditor(Object.class, null);
    
    // Clear existing data
    model.setRowCount(0);

    // concatenate lastname and first name
    String userFullName = employee.getLastName() + " " + employee.getFirstName();
    // Add only rows with AttendanceStatus = "Pending"
    for (EmpAttLeave att : attendanceList) {
        // add another condition where it checks if the Immediate Supervisor of the user in the attendance list is the same in the current user logged In
        if ("Pending".equalsIgnoreCase(att.getAttendanceStatus()) && userFullName.equalsIgnoreCase(att.getImmediateSupervisor())) { 
            model.addRow(new Object[]{
                att.getEmpID(), att.getFirstName(), att.getLastName(), att.getEmployeeStatus(),
                att.getPosition(), att.getImmediateSupervisor(), att.getAttDateFrom(), att.getAttDateTo(), 
                att.getTimeIn(), att.getTimeOut(), att.getHoursWorked(), att.getDuration(), 
                att.getAttendanceType(), att.getAttendanceStatus(), att.getVlCount(), 
                att.getVlUsed(), att.getVlBalance(), att.getSlCount(), att.getSlUsed(), att.getSlBalance()
            });
        }
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_Attendance = new javax.swing.JTable();
        btn_attApprove = new javax.swing.JButton();
        btn_attReject = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.lightGray, null, null));

        tbl_Attendance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Employee ID", "First Name", "Last Name", "Status", "Position", "Immeidate Supervisor", "Date From", "Date To", "Time In", "Time Out", "Hrs Worked", "Duration", "AttendanceType", "AttendanceStatus", "VLCount", "VLUsed", "VLBal", "SLCount", "SLUsed", "SLBal"
            }
        ));
        jScrollPane1.setViewportView(tbl_Attendance);

        btn_attApprove.setText("APPROVE");
        btn_attApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_attApproveActionPerformed(evt);
            }
        });

        btn_attReject.setText("REJECT");
        btn_attReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_attRejectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 981, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_attApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btn_attReject, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_attApprove)
                    .addComponent(btn_attReject))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 102));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 17, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(245, 28, 71));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 102));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 102));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 4, Short.MAX_VALUE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.getAccessibleContext().setAccessibleName("Profile");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_attApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_attApproveActionPerformed
        // Get the selected row index
    int selectedRow = tbl_Attendance.getSelectedRow();

    if (selectedRow != -1) { // Ensure a row is selected
        // Get the Employee ID (assuming Employee ID is in column 0)
        String empID = (String) tbl_Attendance.getValueAt(selectedRow, 0);
  
        // Get the current attendance status (assuming it's in column 12)
        String currentAttendanceStatus = (String) tbl_Attendance.getValueAt(selectedRow, 13);
 
        // Check if the current attendance status is "Pending" before approving
        if ("Pending".equalsIgnoreCase(currentAttendanceStatus)) {
            // Update attendance status to "Approved"
            String newStatus = "Approved";
            tbl_Attendance.setValueAt(newStatus, selectedRow, 13);

            // Update the CSV file
            CSVHandler.updateAttendanceStatus(empID, newStatus, "Attendance approved successfully!");

            JOptionPane.showMessageDialog(null, "Attendance approved successfully!");
             this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Only entries with 'Pending' status can be approved.", 
                                          "Approval Denied", JOptionPane.WARNING_MESSAGE);
           this.dispose();
        } 
    } else {
        JOptionPane.showMessageDialog(null, "Please select an attendance entry to approve.");
    }
        
    }//GEN-LAST:event_btn_attApproveActionPerformed

    private void btn_attRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_attRejectActionPerformed
    // Get the selected row index
    int selectedRow = tbl_Attendance.getSelectedRow();

    if (selectedRow != -1) { // Ensure a row is selected
        // Get the Employee ID (assuming Employee ID is in column 0)
        String empID = (String) tbl_Attendance.getValueAt(selectedRow, 0);
  
        // Get the current attendance status (assuming it's in column 13)
        String currentAttendanceStatus = (String) tbl_Attendance.getValueAt(selectedRow, 13);
 
        // Check if the current attendance status is "Pending" before rejecting
        if ("Pending".equalsIgnoreCase(currentAttendanceStatus)) {
            // Update attendance status to "Rejected"
            String newStatus = "Rejected";
            tbl_Attendance.setValueAt(newStatus, selectedRow, 13);

            // Update the CSV file
            CSVHandler.updateAttendanceStatus(empID, newStatus, "Attendance rejected successfully!");

            JOptionPane.showMessageDialog(null, "Attendance rejected successfully!");
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Only entries with 'Pending' status can be rejected.", 
                                          "Rejection Denied", JOptionPane.WARNING_MESSAGE);
            this.dispose();
        } 
    } else {
        JOptionPane.showMessageDialog(null, "Please select an attendance entry to reject.");
    }
    
    }//GEN-LAST:event_btn_attRejectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_EmpAttLeaveApproval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_EmpAttLeaveApproval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_EmpAttLeaveApproval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_EmpAttLeaveApproval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        


      

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_EmpAttLeaveApproval().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_attApprove;
    private javax.swing.JButton btn_attReject;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_Attendance;
    // End of variables declaration//GEN-END:variables
}
